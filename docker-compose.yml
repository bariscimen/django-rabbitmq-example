version: "3"

services:
  order-app:
    build:
      context: .
      dockerfile: Dockerfile-order-app
    restart: on-failure
    ports:
      - "8080:8080"
    volumes:
      - ./orderapp/:/app
    command: >
      sh -c "wait-for order-db:5432 && wait-for rabbitmq:5672 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    depends_on:
      - order-db
      - rabbitmq
    networks:
      - distributed_system

  invoice-app:
    build:
      context: .
      dockerfile: Dockerfile-invoice-app
    restart: on-failure
    volumes:
      - ./invoiceapp/:/app
    command: >
      sh -c "wait-for invoice-db:5432 && wait-for order-app:8080 &&
             python manage.py migrate &&
             celery -A invoiceapp worker -l info"
    depends_on:
      - order-app
      - rabbitmq
      - invoice-db
    networks:
      - distributed_system

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq:cached
    networks:
      - distributed_system

  order-db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "54320:5432"
    volumes:
      - order_db:/var/lib/postgresql/data:cached
    networks:
      - distributed_system

  invoice-db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "54321:5432"
    volumes:
      - invoice_db:/var/lib/postgresql/data:cached
    networks:
      - distributed_system

volumes:
  order_db:
  invoice_db:
  rabbitmq:

networks:
  distributed_system:
